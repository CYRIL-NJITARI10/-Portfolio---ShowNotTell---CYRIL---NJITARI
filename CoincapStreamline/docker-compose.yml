version: '3'

services:
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9094:9094'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    volumes:
      - ./containers/kafka:/bitnami/kafka
    networks:
      - airflow-kafka

  kafka-ui:
    container_name: kafka-ui-1
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8000:8080
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: PLAINTEXT://kafka:9092
      DYNAMIC_CONFIG_ENABLED: 'true'
    networks:
      - airflow-kafka

  docker-proxy:
    image: bobrik/socat
    command: "TCP4-LISTEN:2375,fork,reuseaddr UNIX-CONNECT:/var/run/docker.sock"
    ports:
      - "2376:2375"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - airflow-kafka

  coincap-postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: Coincap_Cyril
      POSTGRES_PASSWORD: Coincap_Cyril
      POSTGRES_DB: Coincap_db
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./sql/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
      - ./scripts/setup_database.sh:/docker-entrypoint-initdb.d/setup_database.sh
    ports:
      - "5432:5432"
    networks:
      - airflow-kafka

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: Coincap_Cyril
    ports:
      - "8081:80"
    depends_on:
      - coincap-postgres
    networks:
      - airflow-kafka

  spark:
    build:
      context: .
      dockerfile: ./containers/spark/Dockerfile
    ports:
      - "8888:8888"
      - "4040:4040"
    volumes:
      - ./scripts:/home/jovyan/work
      - ./local-checkpoints:/home/jovyan/checkpoints
      - ./src:/home/jovyan/src
      - ./data:/home/jovyan/data
    depends_on:
      - kafka
      - coincap-postgres
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - PYSPARK_SUBMIT_ARGS=--packages org.apache.spark:spark-sql-kafka-0-10_2.12:3.0.1 pyspark-shell
    networks:
      - airflow-kafka

networks:
  airflow-kafka:
    external: true

volumes:
  postgres-data: